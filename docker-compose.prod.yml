services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: library_app_prod
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}?schema=public
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - library_network
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: library_postgres_prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - library_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  postgres_data:

networks:
  library_network:
    driver: bridge
