version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_container
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  app:
    build: .
    container_name: nest_app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${PORT}:${PORT}"
    environment:
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma
    networks:
      - app_network

    command: [ "sh", "-c", "echo 'Waiting for PostgreSQL...' && until pg_isready -h postgres -p 5432 -U ${DB_USER} -d ${DB_NAME} -t 1; do sleep 2; done && npx prisma migrate deploy && npm run start:dev" ]

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge